swagger: '2.0'
info:
  title: XX-Eat
  version: '1.0'
  description: |-
    This is an API that you can deploy on your localhost for test purposes. To get started, install a json server with this command:

    npm install -g json-server

    Once you have installed the server, run this command to start the local server:

    json-server â€” watch db.json

    Your server will be up at http://localhost:3000. The data available on http://localhost:3000 is from db.json file in the location where you have installed the server.
host: 'localhost:3000'
schemes:
  - http
produces:
  - application/json
consumes:
  - application/json
paths:
  '/restaurant/{id}':
    parameters:
      - type: string
        name: id
        in: path
        required: true
        description: ID of the restaurant
    get:
      summary: Get all restaurant categories
      tags: []
      operationId: get-restaurant-id
      description: 'Returns ID of selected restaurants '
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: ./common/models/restaurant.yaml
        '400':
          description: Bad Request
          schema:
            type: object
            properties: {}
    patch:
      summary: ''
      operationId: patch-restaurant
      description: Update a new restaurant's info
      security: []
      parameters:
        - $ref: '#/parameters/contentType'
        - in: body
          name: body
          schema:
            $ref: ./common/models/restaurant.yaml
          x-examples:
            example-1:
              - name: string
                category: string
                rating: string
                id: 0
      responses:
        '200':
          description: OK
          schema:
            $ref: ./common/models/restaurant.yaml
        '404':
          description: Not Found
          schema:
            type: object
            properties: {}
    delete:
      summary: ''
      operationId: delete-restaurant
      description: Delete restaurant info by ID
      security: []
      parameters:
        - in: body
          name: body
          schema:
            $ref: ./common/models/restaurant.yaml
      responses:
        '200':
          description: OK
          schema:
            type: object
        '404':
          description: Not Found
          schema:
            type: object
            properties: {}
  /restaurant:
    get:
      summary: Your GET endpoint
      tags: []
      operationId: get-restaurant
      description: 'Returns list of restaurants '
      security: []
      parameters:
        - in: body
          name: body
          schema:
            $ref: ./common/models/restaurant.yaml
          x-examples: {}
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '404':
          description: Not Found
          schema:
            type: object
            properties: {}
    post:
      summary: ''
      operationId: post-restaurant
      description: 'Post info for a new restaurants '
      security: []
      parameters:
        - $ref: '#/parameters/contentType'
        - in: body
          name: body
          schema:
            $ref: ./common/models/restaurant.yaml
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
        '404':
          description: Not Found
          schema:
            type: object
            properties: {}
definitions: {}
securityDefinitions: {}
responses: {}
parameters:
  contentType:
    name: Content-Type
    in: header
    required: true
    schema:
      type: string
      default: application/json
    description: application/json
  ID:
    name: ID
    in: path
    required: true
    schema:
      type: string
    description: ID of restaurant
